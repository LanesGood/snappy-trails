{"mappings":"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","sources":["src/js/helpers.js","src/js/model.js","src/js/Views/panelView.js","src/js/config.js","src/js/Views/mapView.js","src/js/controller.js"],"sourcesContent":["// Utility functions\nexport function toMiles(meters) {\n  return meters * 0.000621371192;\n}\nexport function toMeters(miles) {\n  miles * 1609.344;\n}\n\nexport function miliToTime(mili) {\n  return new Date(mili).toISOString().slice(11, -5);\n} // Currently doesnt work for time > 24 hrs\n\nexport function round(number, precision) {\n  return Math.round(number * precision) / precision;\n}\n\n// Function to convert degree minute second coordinates to decimal degrees\nexport function ConvertDMSToDD(degrees, minutes, seconds, direction) {\n  // decimal = degrees + (minutes ÷ 60) + (seconds ÷ 3,600)\n  var dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction == 'S' || direction == 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nexport const ROUTE_MODES = {\n  foot: 'Hike',\n  bike: 'Bike',\n  car: 'Car'\n};\n","import { ConvertDMSToDD } from './helpers.js';\nconst { GRAPHHOPPER_KEY } = process.env;\nexport const state = {\n  images: [],\n  transportMode: 'foot',\n  routeData: {},\n};\nexport function addImage(image) {\n  state.images.push(image);\n}\nexport function removeImage(key, value) {\n  state.images = state.images.filter((img) => img[key] !== value);\n}\nexport function sortImages(order) {\n  state.images = state.images\n    .sort((a, b) => order.indexOf(a.imgId) - order.indexOf(b.imgId))\n    .map((img, i) => ({ ...img, imgOrder: i }));\n}\nexport function setTransportMode(mode) {\n  state.transportMode = mode;\n}\n// Extract image EXIF data in a promise\nexport function getExifData(file) {\n  return new Promise(function (resolve, reject) {\n    EXIF.getData(file, function () {\n      const {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        GPSLatitudeRef,\n        GPSLatitude,\n        GPSLongitudeRef,\n        GPSLongitude,\n        Make,\n        Model,\n      } = EXIF.getAllTags(this);\n      const latitude = ConvertDMSToDD(\n        GPSLatitude[0],\n        GPSLatitude[1],\n        GPSLatitude[2],\n        GPSLatitudeRef\n      );\n      const longitude = ConvertDMSToDD(\n        GPSLongitude[0],\n        GPSLongitude[1],\n        GPSLongitude[2],\n        GPSLongitudeRef\n      );\n      const imageData = {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        latitude,\n        longitude,\n        Make,\n        Model,\n      };\n      resolve(imageData);\n      reject(new Error('There was an error '));\n    });\n  });\n}\n\nexport async function getRoute(transportMode) {\n  try {\n    const pointArray = state.images\n      .sort((a, b) => a.imgOrder - b.imgOrder)\n      .map(({ latitude, longitude }) => [+longitude, +latitude]);\n    const query = new URLSearchParams({\n      key: GRAPHHOPPER_KEY,\n    }).toString();\n    const res = await fetch(`https://graphhopper.com/api/1/route?${query}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        profile: transportMode,\n        points: pointArray,\n        points_encoded: false,\n      }),\n    });\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nexport const getPosition = function () {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n","import { miliToTime, round, toMiles, ROUTE_MODES } from '../helpers';\nclass PanelView {\n  uploadForm = document.querySelector('#upload-form');\n  fileInput = document.querySelector('#fileInput');\n  transportButtons = document.querySelectorAll('input[name=transport-mode]');\n  _clearBtn = document.querySelector('#clear-btn');\n  _userLocationInput = document.querySelector('#user-location');\n  imageList = document.querySelector('#image_list');\n  dropZone = document.querySelector('#drop_zone');\n  routePreviewCard;\n  routePanel;\n  locationPreviewCard;\n\n  addHandlerFileInput(handler) {\n    this.fileInput.addEventListener('change', async function (e) {\n      const fileList = this.files;\n      if (!fileList.length) return;\n      handler(fileList);\n    });\n  }\n  addHandlerTransportButton(handler) {\n    this.transportButtons.forEach((button) =>\n      button.addEventListener('click', function (e) {\n        handler(e);\n      })\n    );\n  }\n  // Drag and drop functions for file upload\n  addHandlerDropInput(handler) {\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, highlight, false);\n    });\n    ['dragleave', 'drop'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, unhighlight, false);\n    });\n    this.dropZone.addEventListener(\n      'drop',\n      async function (e) {\n        let dt = e.dataTransfer;\n        let files = dt.files;\n        if (!files.length) return;\n        handler(files);\n      },\n      false\n    );\n\n    const helperText = document.querySelector('#drop_zone small');\n\n    function highlight(e) {\n      this.classList.add('highlight');\n      helperText.innerText = 'Drop images to upload';\n    }\n\n    function unhighlight(e) {\n      this.classList.remove('highlight');\n      helperText.innerText = 'Upload up to 10 images';\n    }\n\n    function preventDefaults(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n  addHandlerRemoveImage(handler) {\n    this.imageList.addEventListener(\n      'click',\n      function (e) {\n        e.preventDefault();\n        const removeBtn = e.target.closest('.preview__card--remove-btn');\n        if (!removeBtn) return;\n        e.stopImmediatePropagation();\n        const imgId = e.target.closest('.preview__card').dataset.imgId;\n        handler(imgId);\n      },\n      true\n    );\n  }\n  addHandlerPreviewClick(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      e.preventDefault();\n      const imgId = e.target.closest('.preview__card')?.dataset.imgId;\n      if (!imgId) return;\n      handler(imgId);\n    });\n  }\n  addHandlerRouteCardClick(handler) {\n    document.addEventListener('click', function (e) {\n      const routePreviewCard = e.target.closest('.preview__card--route');\n      if (!routePreviewCard) return;\n      handler();\n    });\n  }\n  addHandlerLocationPreviewClick(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      e.preventDefault();\n      const locationPreviewCard = e.target.closest('.preview__card--location');\n      if (!locationPreviewCard) return;\n      handler();\n    });\n  }\n  addHandlerRemoveCurrentLocation(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      const removeBtn = e.target.closest('.location__card--remove-btn');\n      if (!removeBtn) return;\n      e.stopImmediatePropagation();\n      handler();\n      const _userLocationInput = document.querySelector('#user-location');\n      _userLocationInput.checked = false; // Why must this be re-declared rather than using declaration from above?\n    });\n  }\n  addHandlerSubmit(handler) {\n    this.uploadForm.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const formData = new FormData(this.uploadForm);\n      const transportMode = formData.get('transport-mode');\n      handler(transportMode);\n    });\n  }\n  addHandlerClear(handler) {\n    this._clearBtn.addEventListener('click', (e) => {\n      handler();\n    });\n  }\n  addHandlerUserLocation(handler) {\n    this._userLocationInput.addEventListener('change', (e) => handler(e));\n  }\n  addHandlerRoutePanelBack(handler) {\n    document.addEventListener('click', function (e) {\n      const routePanelBackBtn = e.target.closest('.route-panel--back-btn');\n      if (!routePanelBackBtn) return;\n      handler();\n    });\n  }\n  // Drag event listener for image cards\n  addHandlerDragPreviewCard(handler) {\n    // Add dragging class to card when dragstart\n    this.imageList.addEventListener('dragstart', function (e) {\n      const previewCard = e.target.closest('.preview__card');\n      if (!previewCard) return;\n      previewCard.classList.add('dragging');\n    });\n    // Remove dragging class to card when dragstart\n    this.imageList.addEventListener('dragend', function (e) {\n      const previewCard = e.target.closest('.preview__card');\n      if (!previewCard) return;\n      previewCard.classList.remove('dragging');\n    });\n    // Add dragging class to card when dragstart\n    this.imageList.addEventListener('dragover', function (e) {\n      e.preventDefault();\n      const draggingElement = document.querySelector('.dragging');\n      const afterElement = getDragAfterElement(this, e.clientY);\n      if (afterElement == null) {\n        this.appendChild(draggingElement);\n      } else {\n        this.insertBefore(draggingElement, afterElement);\n      }\n      // Reset card order according to UI order\n      const cards = [...this.querySelectorAll('.preview__card')];\n      cards.forEach((card, i) => {\n        card.setAttribute('data-img-order', i);\n      });\n    });\n    this.imageList.addEventListener('drop', function (e) {\n      e.preventDefault();\n      handler();\n    });\n    // Function to determine which element in the list comes after current dragging element\n    function getDragAfterElement(container, y) {\n      const draggableElements = [\n        ...container.querySelectorAll('.preview__card:not(.dragging)'),\n      ];\n      return draggableElements.reduce(\n        (closest, child) => {\n          const box = child.getBoundingClientRect();\n          const offset = y - box.top - box.height / 2;\n          if (offset < 0 && offset > closest.offset) {\n            return { offset: offset, element: child };\n          } else {\n            return closest;\n          }\n        },\n        { offset: Number.NEGATIVE_INFINITY }\n      ).element;\n    }\n  }\n  // Render function to print image, info and coords to preview area\n  renderPreviewCard({\n    file,\n    file: { exifdata },\n    latitude,\n    longitude,\n    imgId,\n    imgOrder,\n  }) {\n    // Create preview card element\n    const previewCard = document.createElement('div');\n    previewCard.classList.add('preview__card');\n    previewCard.setAttribute('draggable', 'true');\n    previewCard.setAttribute('title', 'Drag to reorder image');\n    previewCard.dataset.imgOrder = imgOrder;\n    previewCard.dataset.imgId = imgId;\n    const previewCardHeader = document.createElement('div');\n    previewCardHeader.classList.add('preview__card--header');\n    const previewCardText = document.createElement('div');\n    previewCardText.classList.add('preview__card--text');\n\n    // Create remove button\n    const previewCardRemoveBtn = document.createElement('button');\n    previewCardRemoveBtn.innerText = '✕';\n    previewCardRemoveBtn.setAttribute('title', 'Remove this item');\n    previewCardRemoveBtn.classList.add('preview__card--remove-btn');\n\n    // Create card image\n    const previewImage = document.createElement('img');\n    previewImage.classList.add('preview__image');\n    previewImage.src = URL.createObjectURL(file);\n    previewImage.onload = () => {\n      URL.revokeObjectURL(previewImage.src);\n    };\n\n    previewCardText.innerHTML = `\n      <dl>\n        <dt>lat, lng: </dt><dd>${latitude.toFixed(2)}, ${longitude.toFixed(\n      2\n    )}</dd>\n        <dt>Camera:</dd><dd> ${exifdata.Make} ${exifdata.Model}</dd>\n      </dl>\n    `;\n    if (exifdata.DateTime) {\n      // Convert image date from exif data format to javascript format\n      const [year, month, day, hours, minutes, seconds] =\n        exifdata.DateTime.split(/[: ]/);\n      const dateObject = new Date(\n        year,\n        month - 1,\n        day,\n        hours,\n        minutes,\n        seconds\n      );\n      dateObject &&\n        previewCardText.insertAdjacentHTML(\n          'afterbegin',\n          `<dl>\n            <dt>Date:</dt><dd>${dateObject.toLocaleDateString()}</dd>\n            <dt>Time:</dt><dd>${dateObject.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n            })}</dd>\n          </dl>\n          `\n        );\n    }\n    // Append card items\n    previewCardHeader.appendChild(previewImage);\n    previewCard.appendChild(previewCardHeader);\n    previewCard.appendChild(previewCardRemoveBtn);\n    previewCard.appendChild(previewCardText);\n\n    this.imageList.insertAdjacentElement('beforeend', previewCard);\n  }\n  renderRoutePreviewCard(routeData, transportMode) {\n    const routeTime = miliToTime(routeData.paths[0].time);\n    const routeDistance = routeData.paths[0].distance;\n    const routePreviewEl = document.getElementsByClassName(\n      'preview__card--route'\n    );\n    if (!routePreviewEl.length) {\n      this.routePreviewCard = document.createElement('div');\n      this.routePreviewCard.classList.add(\n        'preview__card--text',\n        'preview__card--route',\n        'preview__card'\n      );\n      this.imageList.insertAdjacentElement(\n        'beforebegin',\n        this.routePreviewCard\n      );\n    }\n    this.routePreviewCard.innerHTML = `\n    <h4>${ROUTE_MODES[transportMode]} Route</h4>\n    <span><h4>${routeTime}</h4>\n    <p>${round(toMiles(routeDistance), 100)} mi</p>\n    </span>\n    <h4>Details  ➡</h4>\n    `;\n  }\n  renderRoutePanel(routeData, transportMode) {\n    const routemode = ROUTE_MODES[transportMode];\n    const routeTime = miliToTime(routeData.paths[0].time);\n    const routeDistance = routeData.paths[0].distance;\n    const routePreviewEl = document.getElementsByClassName('route-panel');\n    if (!routePreviewEl.length) {\n      this.routePanel = document.createElement('div');\n      this.routePanel.classList.add('route-panel', 'preview__card--text');\n    }\n    const routePanelHeader = document.createElement('header');\n    const routePanelTitle = document.createElement('h2');\n    routePanelTitle.innerHTML = `${routemode} Route`;\n    routePanelHeader.appendChild(routePanelTitle);\n\n    const startPoint = routeData.paths[0].points.coordinates[0]\n      .map((e) => e.toFixed(3))\n      .join(', ');\n    const endPoint = routeData.paths[0].points.coordinates\n      .pop()\n      .map((e) => e.toFixed(3))\n      .join(', ');\n    const routeOverview = document.createElement('div');\n    routeOverview.classList.add('route-panel__overview');\n    routeOverview.innerHTML = `\n    <p>From: <strong>${startPoint}</strong></p>\n    <p>To: <strong>${endPoint}</strong></p>\n    `;\n    routeOverview.insertAdjacentHTML(\n      'beforeend',\n      `<p class=\"route-length\"><strong>${routeTime}</strong> (${round(\n        toMiles(routeDistance),\n        100\n      )} miles)</p>`\n    );\n\n    // Create back button\n    const routePanelBackBtn = document.createElement('button');\n    routePanelBackBtn.innerText = '←';\n    routePanelBackBtn.setAttribute('title', 'Back to image list');\n    routePanelBackBtn.classList.add('route-panel--back-btn', 'btn--small');\n\n    routeOverview.appendChild(routePanelBackBtn);\n    routePanelHeader.appendChild(routeOverview);\n    this.routePanel.appendChild(routePanelHeader);\n\n    // Add route instructions\n    const routePanelInstructions = document.createElement('dl');\n    routePanelInstructions.innerHTML = `${routeData.paths[0].instructions\n      .map((step, index) => {\n        return `\n        <dt>${index + 1}</dt>\n        <dd>${step.text}</dd>\n        `;\n      })\n      .join('')}`;\n    this.routePanel.appendChild(routePanelInstructions);\n\n    this.imageList.replaceChildren(this.routePanel);\n  }\n  renderLocationCard(location) {\n    if (!location) return;\n    const locationCardEl = document.getElementsByClassName(\n      'preview__card--location'\n    );\n    if (!locationCardEl.length) {\n      this.locationPreviewCard = document.createElement('div');\n      this.locationPreviewCard.classList.add(\n        'preview__card',\n        'preview__card--location',\n        'preview__card--text'\n      );\n      this.locationPreviewCard.setAttribute('draggable', 'true');\n\n      this.imageList.insertAdjacentElement(\n        'afterbegin',\n        this.locationPreviewCard\n      );\n    }\n    this.locationPreviewCard.innerHTML = `\n      <header><h4>Current Location:${' '}</h4>\n      <span><p>${location[0].toFixed(2)},${location[1].toFixed(2)}</p>\n      </span></header>\n    `;\n    this.locationPreviewCard.dataset.imgId = 'currentCoords';\n    this.locationPreviewCard.dataset.imgOrder = 0;\n    // Create remove button\n    const previewCardRemoveBtn = document.createElement('button');\n    previewCardRemoveBtn.innerText = 'x';\n    previewCardRemoveBtn.setAttribute('title', 'Remove current location');\n    previewCardRemoveBtn.classList.add('location__card--remove-btn');\n    this.locationPreviewCard.appendChild(previewCardRemoveBtn);\n  }\n  // Render all cards from state\n  renderAllImgs(images) {\n    images\n      .sort((a, b) => a.imgOrder - b.imgOrder)\n      .map((img) =>\n        img.currentPosition\n          ? this.renderLocationCard([img.latitude, img.longitude])\n          : this.renderPreviewCard(img)\n      );\n  }\n  renderToast(message, status = 'error') {\n    const toast = document.createElement('div');\n    toast.innerHTML = message;\n    toast.classList.add('toast', `toast--${status}`);\n    const otherToasts = document.querySelectorAll('.toast');\n    if(otherToasts) {\n      let offset = '6rem';\n      for(let i = 0; i < otherToasts.length; i++){\n        toast.style.bottom = `calc(${i + 1} * ${offset})`;\n      }\n    }\n    document.body.appendChild(toast);\n    setTimeout(() => toast.classList.add('toast--show'), 500);\n    setTimeout(() => toast.classList.remove('toast--show'), 5000);\n    setTimeout(() => document.body.removeChild(toast), 5500);\n  }\n  removeRouteInfo() {\n    !!this.routePreviewCard && this.routePreviewCard.remove();\n    !!this.routePanel && this.routePanel.remove();\n  }\n}\n\nexport default new PanelView();\n","export const DEFAULT_COORDS = [-77.041493, 38.930859];","import { DEFAULT_COORDS } from '../config';\nimport { miliToTime, ROUTE_MODES } from '../helpers';\nconst { MAPBOX_TOKEN } = process.env;\nclass MapView {\n  // Leaflet objects and initialization\n  constructor() {\n    this.map = L.map('map').setView([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 5);\n    this.tiles = L.tileLayer(\n      `https://api.mapbox.com/styles/v1/lanesgood/clhsi5wdt00yk01pffukxf1s4/tiles/{z}/{x}/{y}?access_token=${MAPBOX_TOKEN}`,\n      {\n        minZoom: 0,\n        maxZoom: 22,\n      }\n    );\n    this.routeLine = L.polyline([]); // Set empty routeline to allow later clearing. Will likely later change to array of features to permit multiple lines\n    this.photoMarkers = L.layerGroup();\n    this.currentPositionMarker = L.marker();\n  }\n  render() {\n    this.tiles.addTo(this.map);\n    this.photoMarkers.addTo(this.map);\n  }\n  renderPhotoMarker(latitude, longitude, file, i) {\n    const imageURL = URL.createObjectURL(file);\n    const photoPopup = L.popup({\n      autoClose: false,\n    }).setContent(`<img class='marker-photo' src='${imageURL}' />`);\n    const photoMarker = L.marker([latitude, longitude]);\n    photoMarker.imgId = i;\n    this.photoMarkers.addLayer(photoMarker);\n    photoMarker.bindPopup(photoPopup).openPopup();\n  }\n  flyToDefaultCoords() {\n    this.map.flyTo([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 10);\n  }\n  flyToImageBounds(images) {\n    this.map.flyToBounds(\n      images.map(({ latitude, longitude }) => [latitude, longitude])\n    );\n  }\n  renderRouteLine(routeData, transportMode) {\n    const routeCoords = routeData.paths[0].points.coordinates.map((coords) => [\n      coords[1],\n      coords[0],\n    ]);\n    const routeTime = miliToTime(routeData.paths[0].time);\n    this.routeLine.setLatLngs(routeCoords).addTo(this.map);\n    this.routeLine.bindPopup(`${ROUTE_MODES[transportMode]}: ${routeTime}`).openPopup();\n  }\n  clearRouteLine() {\n    this.routeLine.remove();\n  }\n}\nexport default new MapView();\n","import * as model from './model.js';\nimport panelView from './views/panelView.js';\nimport mapView from './views/mapView.js';\n\nif (module.hot) {\n  module.hot.accept();\n}\nconst { state } = model;\n\nconst controlAddFiles = async function (fileList) {\n  let nextImgOrder = state.images.length; // Initialize with the current count\n  for (let i = 0; i < fileList.length; i++) {\n    const file = fileList[i];\n\n    if (!state.images.some((img) => img.file?.name === file.name)) {\n      const imgOrder = nextImgOrder++;\n      const imgId = crypto.randomUUID();\n\n      try {\n        const exifData = await model.getExifData(file);\n        const imageData = model.prepareImageData(exifData, file.name)\n        const { latitude, longitude } = imageData;\n\n        const newImage = {\n          file,\n          imgId,\n          imgOrder,\n          latitude,\n          longitude,\n        };\n\n        model.addImage(newImage);\n        mapView.renderPhotoMarker(latitude, longitude, file, imgId);\n        panelView.renderPreviewCard(newImage);\n        mapView.flyToImageBounds(state.images);\n      } catch (e) {\n        panelView.renderToast(e)\n        console.error(e);\n      }\n    } else {\n      panelView.renderToast(`${file.name} is already in the destination list`, 'info');\n    }\n  }\n\n  mapView.clearRouteLine();\n  panelView.removeRouteInfo();\n  panelView.fileInput.value = '';\n  controlSubmit(state.transportMode);\n};\n\nconst controlTransportMode = function (e) {\n  mapView.clearRouteLine();\n  panelView.removeRouteInfo();\n  let transportMode = e.target.value;\n  model.setTransportMode(transportMode);\n  controlSubmit(state.transportMode);\n};\n\nconst controlPreviewClick = function (i) {\n  const img = state.images.find((img) => img.imgId === i);\n  mapView.map.flyTo([img.latitude, img.longitude], 15);\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.imgId === i) {\n      layer.openPopup();\n    }\n  });\n};\n\nconst controlRouteCardClick = function () {\n  panelView.renderRoutePanel(state.routeData, state.transportMode);\n};\nconst controlRouteBackClick = function () {\n  panelView.routePanel.remove();\n  panelView.renderAllImgs(state.images);\n};\n// Remove image from state and prevew when close (x) button clicked\nconst controlRemoveImage = function (i) {\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.imgId === i) {\n      mapView.map.removeLayer(layer);\n    }\n  });\n  panelView.imageList.removeChild(\n    panelView.imageList.querySelector(`[data-img-id=\"${i}\"]`)\n  );\n  model.removeImage('imgId', i);\n  mapView.clearRouteLine();\n  panelView.removeRouteInfo();\n  controlSubmit(state.transportMode);\n};\n\nconst controlUserLocation = async function (e) {\n  if (e.target.checked) {\n    try {\n      const {\n        coords: { latitude, longitude },\n      } = await model.getPosition();\n      // Add current location to images array\n      model.addImage({\n        file: null,\n        imgId: 'currentCoords',\n        imgOrder: 1000,\n        latitude,\n        longitude,\n        currentPosition: true,\n      });\n      // Add current location marker\n      mapView.currentPositionMarker.setLatLng([latitude, longitude]);\n      mapView.currentPositionMarker.bindPopup('Current location');\n      mapView.photoMarkers.addLayer(mapView.currentPositionMarker);\n\n      // Add current location preview card\n      panelView.renderLocationCard([latitude, longitude]);\n      mapView.currentPositionMarker.openPopup();\n      mapView.flyToImageBounds(state.images);\n      controlSubmit(state.transportMode);\n    } catch (e) {\n      console.error(e);\n      panelView.renderToast(e.message);\n    }\n  } else if (!e.target.checked) {\n    // Remove current location marker\n    if (mapView.map.hasLayer(mapView.currentPositionMarker)) {\n      mapView.map.removeLayer(mapView.currentPositionMarker);\n    }\n    // Remove current location from coords array\n    model.removeImage('currentPosition', true);\n\n    // Set map view based on existing images\n    if (state.images.length > 0) {\n      mapView.flyToImageBounds(state.images);\n    } else {\n      mapView.flyToDefaultCoords();\n    }\n    // Remove location preview card\n    panelView.imageList.removeChild(panelView.locationPreviewCard);\n    // Remove current position marker\n    mapView.photoMarkers.removeLayer(mapView.currentPositionMarker);\n    panelView.removeRouteInfo();\n    mapView.clearRouteLine();\n    controlSubmit(state.transportMode);\n    return state.images;\n  }\n};\nconst controlLocationPreviewClick = function () {\n  let currentCoords = state.images.find((image) => image.currentPosition);\n  mapView.map.flyTo([currentCoords.latitude, currentCoords.longitude], 15);\n};\n\nconst controlRemoveLocationPreview = function () {\n  // Remove current location from coords array\n  model.removeImage('currentPosition', true);\n  // Remove location preview card\n  panelView.imageList.removeChild(panelView.locationPreviewCard);\n  panelView.removeRouteInfo();\n  mapView.clearRouteLine();\n  // Remove map marker for current location\n  if (mapView.map.hasLayer(mapView.currentPositionMarker)) {\n    mapView.map.removeLayer(mapView.currentPositionMarker);\n  }\n  controlSubmit(state.transportMode);\n};\n\n// Update the model based on preview cards sorted via drag\nconst controlImagesOrder = function () {\n  const sortOrder = [\n    ...panelView.imageList.querySelectorAll('.preview__card'),\n  ].map((el) => el.getAttribute('data-img-id'));\n  model.sortImages(sortOrder);\n  controlSubmit(state.transportMode);\n};\n\nconst controlSubmit = async function (transportMode) {\n  if (state.images.length < 2) return;\n  panelView.removeRouteInfo();\n  mapView.clearRouteLine();\n  model.setTransportMode(transportMode);\n  try {\n    const routeData = await model.getRoute(state.transportMode);\n    state.routeData = routeData;\n    mapView.flyToImageBounds(state.images);\n    mapView.renderRouteLine(state.routeData, state.transportMode);\n    panelView.renderRoutePreviewCard(state.routeData, state.transportMode);\n  } catch(e) {\n    panelView.renderToast(e);\n  }\n};\n\nconst controlClear = function () {\n  // Remove all images\n  state.images.length = 0;\n  // remove all photo markers\n  mapView.photoMarkers.clearLayers();\n  // remove route from map\n  mapView.clearRouteLine();\n  // Reset map view\n  mapView.flyToDefaultCoords();\n  // Remove all image previews\n  panelView.imageList.replaceChildren();\n  panelView.removeRouteInfo();\n\n  // reset to default coords/world view\n  panelView.form.reset();\n};\n\nexport const init = function () {\n  console.log('Snappy trails is up and running. Reticulating splines');\n\n  state.images.length > 0 && panelView.renderAllImgs(state.images);\n  mapView.render();\n  panelView.addHandlerUserLocation(controlUserLocation);\n  panelView.addHandlerFileInput(controlAddFiles);\n  panelView.addHandlerTransportButton(controlTransportMode);\n  panelView.addHandlerDropInput(controlAddFiles);\n  panelView.addHandlerPreviewClick(controlPreviewClick);\n  panelView.addHandlerDragPreviewCard(controlImagesOrder);\n  panelView.addHandlerLocationPreviewClick(controlLocationPreviewClick);\n  panelView.addHandlerRemoveCurrentLocation(controlRemoveLocationPreview);\n  panelView.addHandlerRemoveImage(controlRemoveImage);\n  panelView.addHandlerSubmit(controlSubmit);\n  panelView.addHandlerRouteCardClick(controlRouteCardClick);\n  panelView.addHandlerRoutePanelBack(controlRouteBackClick);\n  panelView.addHandlerClear(controlClear);\n};\n"],"names":["$bd02c871d9c5ba8e$export$e336666bf7450545","meters","$bd02c871d9c5ba8e$export$fd49f38c4a455c6d","mili","Date","toISOString","slice","$bd02c871d9c5ba8e$export$2077e0241d6afd3c","number","precision","Math","round","$bd02c871d9c5ba8e$export$3715616f3d4d8e41","degrees","minutes","seconds","direction","dd","$bd02c871d9c5ba8e$export$d40b87dcd80796ee","foot","bike","car","$0f1d4402dffacf5b$var$GRAPHHOPPER_KEY","$0f1d4402dffacf5b$export$ca000e230c0caa3e","images","transportMode","routeData","$0f1d4402dffacf5b$export$7bc0801d8428ec28","image","push","$0f1d4402dffacf5b$export$d65c55ff4ffe089f","key","value","filter","img","$0f1d4402dffacf5b$export$5917a9c9ec95be1f","order","sort","a","b","indexOf","imgId","map","i","imgOrder","$0f1d4402dffacf5b$export$3304b4d12b70dac7","mode","$0f1d4402dffacf5b$export$dd3a48f74d5a1199","file","Promise","resolve","reject","EXIF","getData","DateTime","GPSImgDirection","GPSImgDirectionRef","GPSLatitudeRef","GPSLatitude","GPSLongitudeRef","GPSLongitude","Make","Model","getAllTags","this","latitude","longitude","Error","async","$0f1d4402dffacf5b$export$da6d2f7032b7150b","pointArray","query","URLSearchParams","toString","res","fetch","method","headers","body","JSON","stringify","profile","points","points_encoded","data","json","ok","message","error","console","$0f1d4402dffacf5b$export$1690e12b840569b9","navigator","geolocation","getCurrentPosition","$0c5fefc7cefea244$export$2e2bcd8739ae039","uploadForm","document","querySelector","fileInput","transportButtons","querySelectorAll","_clearBtn","_userLocationInput","imageList","dropZone","routePreviewCard","routePanel","locationPreviewCard","addHandlerFileInput","handler","addEventListener","e","fileList","files","length","addHandlerTransportButton","forEach","button","addHandlerDropInput","eventName","preventDefaults","highlight","unhighlight","dataTransfer","helperText","classList","add","innerText","remove","preventDefault","stopPropagation","addHandlerRemoveImage","target","closest","stopImmediatePropagation","dataset","addHandlerPreviewClick","addHandlerRouteCardClick","addHandlerLocationPreviewClick","addHandlerRemoveCurrentLocation","checked","addHandlerSubmit","FormData","get","addHandlerClear","addHandlerUserLocation","addHandlerRoutePanelBack","addHandlerDragPreviewCard","previewCard","draggingElement","afterElement","container","y","clientY","reduce","child","box","getBoundingClientRect","offset","top","height","element","Number","NEGATIVE_INFINITY","appendChild","insertBefore","card","setAttribute","renderPreviewCard","exifdata","createElement","previewCardHeader","previewCardText","previewCardRemoveBtn","previewImage","src","URL","createObjectURL","onload","revokeObjectURL","innerHTML","toFixed","year","month","day","hours","split","dateObject","insertAdjacentHTML","toLocaleDateString","toLocaleTimeString","hour","minute","insertAdjacentElement","renderRoutePreviewCard","routeTime","paths","time","routeDistance","distance","getElementsByClassName","renderRoutePanel","routemode","routePanelHeader","routePanelTitle","startPoint","coordinates","join","endPoint","pop","routeOverview","routePanelBackBtn","routePanelInstructions","instructions","step","index","text","replaceChildren","renderLocationCard","location","renderAllImgs","currentPosition","renderToast","status","toast","otherToasts","style","bottom","setTimeout","removeChild","removeRouteInfo","$ba30e20475feac5a$export$2caadec3201a577","$c73a7764721fa31f$export$2e2bcd8739ae039","constructor","L","setView","tiles","tileLayer","minZoom","maxZoom","routeLine","polyline","photoMarkers","layerGroup","currentPositionMarker","marker","render","addTo","renderPhotoMarker","imageURL","photoPopup","popup","autoClose","setContent","photoMarker","addLayer","bindPopup","openPopup","flyToDefaultCoords","flyTo","flyToImageBounds","flyToBounds","renderRouteLine","routeCoords","coords","setLatLngs","clearRouteLine","state","$f50bd1f2915ed0f2$var$state","$0f1d4402dffacf5b$exports","$f50bd1f2915ed0f2$var$controlAddFiles","nextImgOrder","some","name","crypto","randomUUID","exifData","getExifData","imageData","prepareImageData","newImage","addImage","$f50bd1f2915ed0f2$var$controlSubmit","$f50bd1f2915ed0f2$var$controlTransportMode","setTransportMode","$f50bd1f2915ed0f2$var$controlPreviewClick","find","eachLayer","layer","$f50bd1f2915ed0f2$var$controlRouteCardClick","$f50bd1f2915ed0f2$var$controlRouteBackClick","$f50bd1f2915ed0f2$var$controlRemoveImage","removeLayer","removeImage","$f50bd1f2915ed0f2$var$controlUserLocation","getPosition","setLatLng","hasLayer","$f50bd1f2915ed0f2$var$controlLocationPreviewClick","currentCoords","$f50bd1f2915ed0f2$var$controlRemoveLocationPreview","$f50bd1f2915ed0f2$var$controlImagesOrder","sortOrder","el","getAttribute","sortImages","getRoute","$f50bd1f2915ed0f2$var$controlClear","clearLayers","form","reset","log"],"version":3,"file":"index.d85b29b2.js.map"}