{"mappings":"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","sources":["src/js/helpers.js","src/js/model.js","src/js/views/panelView.js","src/js/config.js","src/js/views/mapView.js","src/js/controller.js"],"sourcesContent":["// Utility functions\nexport function toMiles(meters) {\n  return meters * 0.000621371192;\n}\nexport function toMeters(miles) {\n  miles * 1609.344;\n}\n\nexport function miliToTime(mili) {\n  return new Date(mili).toISOString().slice(11, -5);\n} // Currently doesnt work for time > 24 hrs\n\nexport function round(number, precision) {\n  return Math.round(number * precision) / precision;\n}\n\n// Function to convert degree minute second coordinates to decimal degrees\nexport function ConvertDMSToDD(degrees, minutes, seconds, direction) {\n  // decimal = degrees + (minutes รท 60) + (seconds รท 3,600)\n  var dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction == 'S' || direction == 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n","import { ConvertDMSToDD } from './helpers.js';\nexport const state = {\n  imageCoords: [],\n  uploadedImages: [],\n  currentLatLng: [],\n};\n\n// Extract image EXIF data in a promise\nexport function getExifData(file) {\n  return new Promise(function (resolve, reject) {\n    EXIF.getData(file, function () {\n      const {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        GPSLatitudeRef,\n        GPSLatitude,\n        GPSLongitudeRef,\n        GPSLongitude,\n        Make,\n        Model,\n      } = EXIF.getAllTags(this);\n      const latitude = ConvertDMSToDD(\n        GPSLatitude[0],\n        GPSLatitude[1],\n        GPSLatitude[2],\n        GPSLatitudeRef\n      );\n      const longitude = ConvertDMSToDD(\n        GPSLongitude[0],\n        GPSLongitude[1],\n        GPSLongitude[2],\n        GPSLongitudeRef\n      );\n      const imageData = {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        latitude,\n        longitude,\n        Make,\n        Model,\n      };\n      resolve(imageData);\n      reject(new Error('There was an error '));\n    });\n  });\n}\n\nexport async function getRoute(transportMode) {\n  try {\n    const pointArray = state.imageCoords.map(({ lat, lng }) => [+lng, +lat]);\n    const query = new URLSearchParams({\n      key: 'db56c0cf-613e-456d-baea-46650066da62', // remove from github\n    }).toString();\n    const res = await fetch(`https://graphhopper.com/api/1/route?${query}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        profile: transportMode,\n        points: pointArray,\n        points_encoded: false,\n      }),\n    });\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nexport const getPosition = function () {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n","import { miliToTime, round, toMiles } from '../helpers';\nclass PanelView {\n  _parentElement = document.querySelector('#upload-form');\n  _input = document.querySelector('#fileInput');\n  _submitBtn = document.querySelector('#submit-route-btn');\n  _clearBtn = document.querySelector('#clear-btn');\n  _userLocationInput = document.querySelector('#user-location');\n  preview = document.querySelector('#preview');\n  form = document.querySelector('form');\n  routePreviewCard;\n\n  addHandlerFileInput(handler) {\n    this._input.addEventListener('change', async function (e) {\n      const fileList = this.files;\n      if (!fileList.length) return;\n      handler(fileList);\n      this.value = null;\n    });\n  }\n  addHandlerRemoveImage(handler) {\n    this.preview.addEventListener('click', function (e) {\n      e.preventDefault();\n      const removeBtn = e.target.closest('.preview__card--remove-btn');\n      if (!removeBtn) return;\n\n      const imgIndex = e.target.closest('.preview__card').dataset.photoIndex;\n      handler(imgIndex);\n    });\n  }\n  addHandlerPreviewClick(handler) {\n    this.preview.addEventListener('click', function (e) {\n      e.preventDefault();\n      const imgIndex = e.target.closest('.preview__card').dataset.photoIndex;\n      if (!imgIndex) return;\n      handler(imgIndex);\n    });\n  }\n  addHandlerSubmit(handler) {\n    this.form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const formData = new FormData(this.form);\n      const transportMode = formData.get('transport-mode');\n      handler(transportMode);\n    });\n  }\n  addHandlerClear(handler) {\n    this._clearBtn.addEventListener('click', (e) => {\n      handler();\n      // Remove all image previews\n      this.preview.replaceChildren();\n\n      // reset to default coords/world view\n      this.form.reset();\n      this._submitBtn.disabled = true;\n    });\n  }\n  addHandlerUserLocation(handler) {\n    this._userLocationInput.addEventListener('change', (e) => handler(e));\n  }\n  // Function to print image, info and coords to preview area\n  renderPreviewCard(file, exifData, i) {\n    // Create preview card element\n    const previewCard = document.createElement('div');\n    previewCard.classList.add('preview__card');\n    previewCard.dataset.photoIndex = i;\n    const previewCardHeader = document.createElement('div');\n    previewCardHeader.classList.add('preview__card--header');\n    const previewCardText = document.createElement('div');\n    previewCardText.classList.add('preview__card--text');\n\n    // Create remove button\n    const previewCardRemoveBtn = document.createElement('button');\n    previewCardRemoveBtn.innerText = 'X';\n    previewCardRemoveBtn.setAttribute('title', 'Remove this item');\n    previewCardRemoveBtn.classList.add('preview__card--remove-btn');\n\n    // Create card image\n    const previewImage = document.createElement('img');\n    previewImage.classList.add('preview__image');\n    previewImage.src = URL.createObjectURL(file);\n\n    // Convert image date from exif data format to javascript format\n    const [year, month, day, hours, minutes, seconds] =\n      exifData.DateTime.split(/[: ]/);\n    const dateObject = new Date(year, month - 1, day, hours, minutes, seconds);\n\n    previewCardText.innerHTML = `\n      <h4>${file.name}</h4>\n      <dl>\n        <dt>Date:</dt><dd>${dateObject.toLocaleDateString()}</dd>\n        <dt>Time:</dt><dd>${dateObject.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n        })}</dd>\n        <dt>lat, lng: </dt><dd>${exifData.latitude.toFixed(\n          2\n        )}, ${exifData.longitude.toFixed(2)}</dd>\n        <dt>Camera:</dd><dd> ${exifData.Make} ${exifData.Model}</dd>\n      </dl>\n    `;\n    // Append card items\n    previewCardHeader.appendChild(previewImage);\n    previewCard.appendChild(previewCardHeader);\n    previewCard.appendChild(previewCardRemoveBtn);\n    previewCard.appendChild(previewCardText);\n    this.preview.insertAdjacentElement('afterbegin', previewCard);\n  }\n  renderRoutePreview(routeData) {\n    const routeTime = miliToTime(routeData.paths[0].time);\n    const routeDistance = routeData.paths[0].distance;\n    const routePreviewEl = document.getElementsByClassName(\n      'preview__card--route'\n    );\n    if (!routePreviewEl.length) {\n      this.routePreviewCard = document.createElement('div');\n      this.routePreviewCard.classList.add(\n        'preview__card--text',\n        'preview__card--route',\n        'preview__card'\n      );\n      this.preview.insertAdjacentElement('afterbegin', this.routePreviewCard);\n    }\n    this.routePreviewCard.innerHTML = `\n    <h4>Route</h4>\n    <span><h4>${routeTime}</h4>\n    <p>${round(toMiles(routeDistance), 100)} mi</p>\n    </span>\n    `;\n  }\n}\n\nexport default new PanelView();\n","export const DEFAULT_COORDS = [-77.041493, 38.930859];","import { DEFAULT_COORDS } from '../config';\nimport { miliToTime } from '../helpers';\nclass MapView {\n  // Leaflet objects and initialization\n  constructor() {\n    this.map = L.map('map').setView([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 10);\n    this.Stamen_TonerLite = L.tileLayer(\n      'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',\n      'mapbox://styles/lanesgood/clhsi5wdt00yk01pffukxf1s4',\n      {\n        attribution:\n          'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n        subdomains: 'abcd',\n        minZoom: 0,\n        maxZoom: 20,\n        ext: 'png',\n      }\n    );\n    this.routeLine = L.polyline([]); // Set empty routeline to allow later clearing. Will likely later change to array of features to permit multiple lines\n    this.photoMarkers = L.layerGroup();\n    this.currentPositionMarker = L.marker();\n  }\n  render() {\n    this.Stamen_TonerLite.addTo(this.map);\n    this.photoMarkers.addTo(this.map);\n  }\n  renderPhotoMarker(latitude, longitude, file, i) {\n    const imageURL = URL.createObjectURL(file);\n    const photoPopup = L.popup({\n      autoClose: false,\n    }).setContent(`<img class='marker-photo' src='${imageURL}' />`);\n    const photoMarker = L.marker([latitude, longitude]);\n    photoMarker.photoIndex = i;\n    this.photoMarkers.addLayer(photoMarker);\n    photoMarker.bindPopup(photoPopup).openPopup();\n  }\n\n  renderRouteLine(routeData) {\n    const routeCoords = routeData.paths[0].points.coordinates.map((coords) => [\n      coords[1],\n      coords[0],\n    ]);\n    const routeTime = miliToTime(routeData.paths[0].time);\n    console.log(routeData);\n    this.routeLine.setLatLngs(routeCoords).addTo(this.map);\n    this.routeLine.bindPopup(`${routeTime}`).openPopup();\n  }\n}\nexport default new MapView();\n","import * as model from './model.js';\nimport panelView from './views/panelView.js';\nimport mapView from './views/mapView.js';\nimport { DEFAULT_COORDS } from './config.js';\n\nif (module.hot) {\n  module.hot.accept();\n}\nconst controlAddFiles = async function (fileList) {\n  panelView._submitBtn.disabled = false;\n  Array.from(fileList).forEach(async (file, i) => {\n    if (\n      !model.state.uploadedImages.some((img) => img.file.name === file.name)\n    ) {\n      // only add photos if they haven't been added yet\n      model.state.uploadedImages.push({ file, photoIndex: i });\n      try {\n        const exifData = await model.getExifData(file);\n        const { latitude, longitude } = exifData;\n        model.state.imageCoords.push({\n          photoIndex: i,\n          lat: latitude,\n          lng: longitude,\n        });\n\n        // Create a photo marker\n        mapView.renderPhotoMarker(latitude, longitude, file, i);\n        panelView.renderPreviewCard(file, exifData, i);\n        mapView.map.flyToBounds(model.state.imageCoords);\n      } catch (e) {\n        console.error(e);\n        alert('Could not extract location data for this image');\n      }\n    } else {\n      alert(`${file.name} is already in the destination list`);\n    }\n  });\n};\n\nconst controlPreviewClick = function (i) {\n  const img = model.state.imageCoords.find((img) => img.photoIndex === +i);\n  mapView.map.flyTo([img.lat, img.lng], 15);\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.photoIndex === +i) {\n      layer.openPopup();\n    }\n  });\n};\n\nconst controlRemoveImage = function (i) {\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.photoIndex === +i) {\n      mapView.map.removeLayer(layer);\n    }\n  });\n  panelView.preview.removeChild(\n    panelView.preview.querySelector(`[data-photo-index=\"${i}\"]`)\n  );\n  model.state.uploadedImages = model.state.uploadedImages.filter(\n    (img) => img.photoIndex !== +i\n  );\n  model.state.imageCoords = model.state.imageCoords.filter(\n    (img) => img.photoIndex !== +i\n  );\n};\n\nconst controlUserLocation = async function (e) {\n  if (e.target.checked) {\n    try {\n      const {\n        coords: { latitude, longitude },\n      } = await model.getPosition();\n      model.state.currentLatLng.push(latitude, longitude);\n      // Add current location from coordinates array\n      model.state.imageCoords.push({\n        photoIndex: 1000,\n        lat: latitude,\n        lng: longitude,\n      });\n      // Add current location marker\n      mapView.currentPositionMarker.setLatLng(model.state.currentLatLng);\n      mapView.currentPositionMarker.bindPopup('Current location');\n      mapView.photoMarkers.addLayer(mapView.currentPositionMarker);\n      mapView.currentPositionMarker.openPopup();\n      mapView.map.flyToBounds(model.state.imageCoords);\n    } catch (e) {\n      console.error(e);\n      alert('User location not available'); // Replace with toast\n    }\n  } else if (!e.target.checked) {\n    // Remove current location marker\n    if (mapView.map.hasLayer(mapView.currentPositionMarker)) {\n      mapView.map.removeLayer(mapView.currentPositionMarker);\n    }\n    // Remove current location from coords array\n    model.state.imageCoords = model.state.imageCoords.filter(\n      (imgCoord) =>\n        !(\n          imgCoord.lat === model.state.currentLatLng[0] &&\n          imgCoord.lng === model.state.currentLatLng[1]\n        )\n    );\n\n    if (model.state.imageCoords.length > 0) {\n      mapView.map.flyToBounds(model.state.imageCoords);\n    } else {\n      mapView.map.flyTo([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 10);\n    }\n    return model.state.imageCoords;\n  }\n};\nconst controlSubmit = async function (transportMode) {\n  const routeData = await model.getRoute(transportMode);\n  mapView.map.flyToBounds(model.state.imageCoords);\n  mapView.renderRouteLine(routeData);\n  panelView.renderRoutePreview(routeData);\n};\n\nconst controlClear = function () {\n  // Remove all images\n  model.state.uploadedImages.length = 0;\n  model.state.imageCoords.length = 0;\n  // remove all photo markers\n  mapView.photoMarkers.clearLayers();\n  // remove route from map\n  mapView.routeLine.remove(map);\n  // Reset map view\n  mapView.map.flyTo([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 10);\n};\n\nconst init = function () {\n  console.log('Snappy trails is up and running. Reticulating splines');\n\n  mapView.render();\n  panelView.addHandlerUserLocation(controlUserLocation);\n  panelView.addHandlerFileInput(controlAddFiles);\n  panelView.addHandlerPreviewClick(controlPreviewClick);\n  panelView.addHandlerRemoveImage(controlRemoveImage);\n  panelView.addHandlerSubmit(controlSubmit);\n  panelView.addHandlerClear(controlClear);\n};\ninit();\n"],"names":["$bd02c871d9c5ba8e$export$fd49f38c4a455c6d","mili","Date","toISOString","slice","$bd02c871d9c5ba8e$export$3715616f3d4d8e41","degrees","minutes","seconds","direction","dd","$0f1d4402dffacf5b$export$ca000e230c0caa3e","imageCoords","uploadedImages","currentLatLng","$4bc90fbbdfa17099$export$2e2bcd8739ae039","_parentElement","document","querySelector","_input","_submitBtn","_clearBtn","_userLocationInput","preview","form","routePreviewCard","addHandlerFileInput","handler","this","addEventListener","async","e","fileList","files","length","value","addHandlerRemoveImage","preventDefault","target","closest","imgIndex","dataset","photoIndex","addHandlerPreviewClick","addHandlerSubmit","transportMode","FormData","get","addHandlerClear","replaceChildren","reset","disabled","addHandlerUserLocation","renderPreviewCard","file","exifData","i","previewCard","createElement","classList","add","previewCardHeader","previewCardText","previewCardRemoveBtn","innerText","setAttribute","previewImage","src","URL","createObjectURL","year","month","day","hours","DateTime","split","dateObject","innerHTML","name","toLocaleDateString","toLocaleTimeString","hour","minute","latitude","toFixed","longitude","Make","Model","appendChild","insertAdjacentElement","renderRoutePreview","routeData","routeTime","paths","time","routeDistance","distance","number","precision","meters","getElementsByClassName","Math","round","$ba30e20475feac5a$export$2caadec3201a577","$716941e1f0265cb4$export$2e2bcd8739ae039","constructor","map","L","setView","Stamen_TonerLite","tileLayer","attribution","subdomains","minZoom","maxZoom","ext","routeLine","polyline","photoMarkers","layerGroup","currentPositionMarker","marker","render","addTo","renderPhotoMarker","imageURL","photoPopup","popup","autoClose","setContent","photoMarker","addLayer","bindPopup","openPopup","renderRouteLine","routeCoords","points","coordinates","coords","console","log","setLatLngs","$f50bd1f2915ed0f2$var$controlAddFiles","Array","from","forEach","some","img","alert","push","Promise","resolve","reject","EXIF","getData","GPSImgDirection","GPSImgDirectionRef","GPSLatitudeRef","GPSLatitude","GPSLongitudeRef","GPSLongitude","getAllTags","Error","$0f1d4402dffacf5b$export$dd3a48f74d5a1199","lat","lng","flyToBounds","error","$f50bd1f2915ed0f2$var$controlPreviewClick","find","flyTo","eachLayer","layer","$f50bd1f2915ed0f2$var$controlRemoveImage","removeLayer","removeChild","filter","$f50bd1f2915ed0f2$var$controlUserLocation","checked","navigator","geolocation","getCurrentPosition","setLatLng","hasLayer","imgCoord","$f50bd1f2915ed0f2$var$controlSubmit","pointArray","query","URLSearchParams","key","toString","res","fetch","method","headers","body","JSON","stringify","profile","points_encoded","data","json","ok","message","$0f1d4402dffacf5b$export$da6d2f7032b7150b","$f50bd1f2915ed0f2$var$controlClear","clearLayers","remove"],"version":3,"file":"index.6c0add74.js.map"}