{"mappings":"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","sources":["src/js/helpers.js","src/js/model.js","src/js/Views/panelView.js","src/js/config.js","src/js/Views/mapView.js","src/js/controller.js"],"sourcesContent":["// Utility functions\nexport function toMiles(meters) {\n  return meters * 0.000621371192;\n}\nexport function toMeters(miles) {\n  miles * 1609.344;\n}\n\nexport function miliToTime(mili) {\n  return new Date(mili).toISOString().slice(11, -5);\n} // Currently doesnt work for time > 24 hrs\n\nexport function round(number, precision) {\n  return Math.round(number * precision) / precision;\n}\n\n// Function to convert degree minute second coordinates to decimal degrees\nexport function ConvertDMSToDD(degrees, minutes, seconds, direction) {\n  // decimal = degrees + (minutes ÷ 60) + (seconds ÷ 3,600)\n  var dd = degrees + minutes / 60 + seconds / 3600;\n  if (direction == 'S' || direction == 'W') {\n    dd = dd * -1;\n  }\n  return dd;\n}\n\nexport const ROUTE_MODES = {\n  foot: 'Hike',\n  bike: 'Bike',\n  car: 'Car'\n};\n","import { ConvertDMSToDD } from './helpers.js';\nexport const state = {\n  images: [],\n  currentLatLng: [],\n  transportMode: '',\n  routeData: {},\n};\n\n// Extract image EXIF data in a promise\nexport function getExifData(file) {\n  return new Promise(function (resolve, reject) {\n    EXIF.getData(file, function () {\n      const {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        GPSLatitudeRef,\n        GPSLatitude,\n        GPSLongitudeRef,\n        GPSLongitude,\n        Make,\n        Model,\n      } = EXIF.getAllTags(this);\n      const latitude = ConvertDMSToDD(\n        GPSLatitude[0],\n        GPSLatitude[1],\n        GPSLatitude[2],\n        GPSLatitudeRef\n      );\n      const longitude = ConvertDMSToDD(\n        GPSLongitude[0],\n        GPSLongitude[1],\n        GPSLongitude[2],\n        GPSLongitudeRef\n      );\n      const imageData = {\n        DateTime,\n        GPSImgDirection,\n        GPSImgDirectionRef,\n        latitude,\n        longitude,\n        Make,\n        Model,\n      };\n      resolve(imageData);\n      reject(new Error('There was an error '));\n    });\n  });\n}\n\nexport async function getRoute(transportMode) {\n  try {\n    const pointArray = state.images\n      .sort((a, b) => a.imgOrder - b.imgOrder)\n      .map(({ latitude, longitude }) => [+longitude, +latitude]);\n    const query = new URLSearchParams({\n      key: 'db56c0cf-613e-456d-baea-46650066da62', // remove from github\n    }).toString();\n    const res = await fetch(`https://graphhopper.com/api/1/route?${query}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        profile: transportMode,\n        points: pointArray,\n        points_encoded: false,\n      }),\n    });\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nexport const getPosition = function () {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n","import { miliToTime, round, toMiles } from '../helpers';\nclass PanelView {\n  _parentElement = document.querySelector('#upload-form');\n  input = document.querySelector('#fileInput');\n  _submitBtn = document.querySelector('#submit-route-btn');\n  _clearBtn = document.querySelector('#clear-btn');\n  _userLocationInput = document.querySelector('#user-location');\n  imageList = document.querySelector('#image_list');\n  form = document.querySelector('form');\n  dropZone = document.querySelector('#drop_zone');\n  routePreviewCard;\n  routePanel;\n  locationPreviewCard;\n\n  addHandlerFileInput(handler) {\n    this.input.addEventListener('change', async function (e) {\n      const fileList = this.files;\n      if (!fileList.length) return;\n      handler(fileList);\n    });\n  }\n  // Drag and drop functions for file upload\n  addHandlerDropInput(handler) {\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, highlight, false);\n    });\n    ['dragleave', 'drop'].forEach((eventName) => {\n      this.dropZone.addEventListener(eventName, unhighlight, false);\n    });\n    this.dropZone.addEventListener(\n      'drop',\n      async function (e) {\n        let dt = e.dataTransfer;\n        let files = dt.files;\n        if (!files.length) return;\n        handler(files);\n      },\n      false\n    );\n\n    const helperText = document.querySelector('#drop_zone small');\n\n    function highlight(e) {\n      this.classList.add('highlight');\n      helperText.innerText = 'Drop images to upload';\n    }\n\n    function unhighlight(e) {\n      this.classList.remove('highlight');\n      helperText.innerText = 'Upload up to 10 images';\n    }\n\n    function preventDefaults(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n  addHandlerRemoveImage(handler) {\n    this.imageList.addEventListener(\n      'click',\n      function (e) {\n        e.preventDefault();\n        const removeBtn = e.target.closest('.preview__card--remove-btn');\n        if (!removeBtn) return;\n        e.stopImmediatePropagation();\n        const imgId = e.target.closest('.preview__card').dataset.imgId;\n        handler(imgId);\n      },\n      true\n    );\n  }\n  addHandlerPreviewClick(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      e.preventDefault();\n      const imgId = e.target.closest('.preview__card')?.dataset.imgId;\n      if (!imgId) return;\n      handler(imgId);\n    });\n  }\n  addHandlerRouteCardClick(handler) {\n    document.addEventListener('click', function (e) {\n      const routePreviewCard = e.target.closest('.preview__card--route');\n      if (!routePreviewCard) return;\n      handler();\n    });\n  }\n  addHandlerLocationPreviewClick(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      e.preventDefault();\n      const locationPreviewCard = e.target.closest('.preview__card--location');\n      if (!locationPreviewCard) return;\n      handler();\n    });\n  }\n  addHandlerRemoveCurrentLocation(handler) {\n    this.imageList.addEventListener('click', function (e) {\n      const removeBtn = e.target.closest('.location__card--remove-btn');\n      if (!removeBtn) return;\n      e.stopImmediatePropagation();\n      handler();\n      const _userLocationInput = document.querySelector('#user-location');\n      _userLocationInput.checked = false; // Why must this be re-declared rather than using declaration from above?\n    });\n  }\n  addHandlerSubmit(handler) {\n    this.form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const formData = new FormData(this.form);\n      const transportMode = formData.get('transport-mode');\n      handler(transportMode);\n    });\n  }\n  addHandlerClear(handler) {\n    this._clearBtn.addEventListener('click', (e) => {\n      handler();\n    });\n  }\n  addHandlerUserLocation(handler) {\n    this._userLocationInput.addEventListener('change', (e) => handler(e));\n  }\n  addHandlerRoutePanelBack(handler) {\n    document.addEventListener('click', function (e) {\n      const routePanelBackBtn = e.target.closest('.route-panel--back-btn');\n      if (!routePanelBackBtn) return;\n      handler();\n    });\n  }\n  // Drag event listener for image cards\n  addHandlerDragPreviewCard(handler) {\n    // Add dragging class to card when dragstart\n    this.imageList.addEventListener('dragstart', function (e) {\n      const previewCard = e.target.closest('.preview__card');\n      if (!previewCard) return;\n      previewCard.classList.add('dragging');\n    });\n    // Remove dragging class to card when dragstart\n    this.imageList.addEventListener('dragend', function (e) {\n      const previewCard = e.target.closest('.preview__card');\n      if (!previewCard) return;\n      previewCard.classList.remove('dragging');\n    });\n    // Add dragging class to card when dragstart\n    this.imageList.addEventListener('dragover', function (e) {\n      e.preventDefault();\n      const draggingElement = document.querySelector('.dragging');\n      const afterElement = getDragAfterElement(this, e.clientY);\n      if (afterElement == null) {\n        this.appendChild(draggingElement);\n      } else {\n        this.insertBefore(draggingElement, afterElement);\n      }\n      // Reset card order according to UI order\n      const cards = [...this.querySelectorAll('.preview__card')];\n      cards.forEach((card, i) => {\n        card.setAttribute('data-img-order', i);\n      });\n    });\n    this.imageList.addEventListener('drop', function(e) {\n      e.preventDefault();\n      handler();\n    })\n    // Function to determine which element in the list comes after current dragging element\n    function getDragAfterElement(container, y) {\n      const draggableElements = [\n        ...container.querySelectorAll('.preview__card:not(.dragging)'),\n      ];\n      return draggableElements.reduce(\n        (closest, child) => {\n          const box = child.getBoundingClientRect();\n          const offset = y - box.top - box.height / 2;\n          if (offset < 0 && offset > closest.offset) {\n            return { offset: offset, element: child };\n          } else {\n            return closest;\n          }\n        },\n        { offset: Number.NEGATIVE_INFINITY }\n      ).element;\n    }\n  }\n  // Render function to print image, info and coords to preview area\n  renderPreviewCard({\n    file,\n    file: { exifdata },\n    latitude,\n    longitude,\n    imgId,\n    imgOrder,\n  }) {\n    // Create preview card element\n    const previewCard = document.createElement('div');\n    previewCard.classList.add('preview__card');\n    previewCard.setAttribute('draggable', 'true');\n    previewCard.setAttribute('title', 'Drag to reorder image');\n    previewCard.dataset.imgOrder = imgOrder;\n    previewCard.dataset.imgId = imgId;\n    const previewCardHeader = document.createElement('div');\n    previewCardHeader.classList.add('preview__card--header');\n    const previewCardText = document.createElement('div');\n    previewCardText.classList.add('preview__card--text');\n\n    // Create remove button\n    const previewCardRemoveBtn = document.createElement('button');\n    previewCardRemoveBtn.innerText = '✕';\n    previewCardRemoveBtn.setAttribute('title', 'Remove this item');\n    previewCardRemoveBtn.classList.add('preview__card--remove-btn');\n\n    // Create card image\n    const previewImage = document.createElement('img');\n    previewImage.classList.add('preview__image');\n    previewImage.src = URL.createObjectURL(file);\n\n    // Convert image date from exif data format to javascript format\n    const [year, month, day, hours, minutes, seconds] =\n      exifdata.DateTime.split(/[: ]/);\n    const dateObject = new Date(year, month - 1, day, hours, minutes, seconds);\n\n    previewCardText.innerHTML = `\n\n      <dl>\n        <dt>Date:</dt><dd>${dateObject.toLocaleDateString()}</dd>\n        <dt>Time:</dt><dd>${dateObject.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n        })}</dd>\n        <dt>lat, lng: </dt><dd>${latitude.toFixed(2)}, ${longitude.toFixed(\n      2\n    )}</dd>\n        <dt>Camera:</dd><dd> ${exifdata.Make} ${exifdata.Model}</dd>\n      </dl>\n    `;\n    // Append card items\n    previewCardHeader.appendChild(previewImage);\n    previewCard.appendChild(previewCardHeader);\n    previewCard.appendChild(previewCardRemoveBtn);\n    previewCard.appendChild(previewCardText);\n    this.imageList.insertAdjacentElement('beforeend', previewCard);\n  }\n  renderRoutePreviewCard(routeData) {\n    const routeTime = miliToTime(routeData.paths[0].time);\n    const routeDistance = routeData.paths[0].distance;\n    const routePreviewEl = document.getElementsByClassName(\n      'preview__card--route'\n    );\n    if (!routePreviewEl.length) {\n      this.routePreviewCard = document.createElement('div');\n      this.routePreviewCard.classList.add(\n        'preview__card--text',\n        'preview__card--route',\n        'preview__card'\n      );\n      this.imageList.insertAdjacentElement(\n        'beforebegin',\n        this.routePreviewCard\n      );\n    }\n    this.routePreviewCard.innerHTML = `\n    <h4>Route</h4>\n    <span><h4>${routeTime}</h4>\n    <p>${round(toMiles(routeDistance), 100)} mi</p>\n    </span>\n    `;\n  }\n  renderRoutePanel(routeData, transportMode) {\n    const routeTime = miliToTime(routeData.paths[0].time);\n    const routeDistance = routeData.paths[0].distance;\n    const routePreviewEl = document.getElementsByClassName('route-panel');\n    if (!routePreviewEl.length) {\n      this.routePanel = document.createElement('div');\n      this.routePanel.classList.add('route-panel', 'preview__card--text');\n    }\n\n    const startPoint = routeData.paths[0].points.coordinates[0]\n      .map((e) => e.toFixed(2))\n      .join(', ');\n    const endPoint = routeData.paths[0].points.coordinates\n      .pop()\n      .map((e) => e.toFixed(2))\n      .join(', ');\n    this.routePanel.innerHTML = `\n    <h3>${transportMode} Route</h3>\n    <p>From <strong>${startPoint}</strong></p>\n    <p>To <strong>${endPoint}</strong></p>\n    <h2>\n    ${routeTime} <span>(${round(toMiles(routeDistance), 100)} miles)</span>\n    </h2>\n    `;\n\n    // Create back button\n    const routePanelBackBtn = document.createElement('button');\n    routePanelBackBtn.innerText = '← Back';\n    routePanelBackBtn.setAttribute('title', 'Back');\n    routePanelBackBtn.classList.add('route-panel--back-btn', 'btn--small');\n    this.routePanel.appendChild(routePanelBackBtn);\n\n    this.imageList.replaceChildren(this.routePanel);\n    // Add route instructions\n    const routePanelInstructions = document.createElement('dl');\n    routePanelInstructions.innerHTML = `${routeData.paths[0].instructions\n      .map((step, index) => {\n        return `\n        <dt>${index + 1}</dt>\n        <dd>${step.text}</dd>\n      `;\n      })\n      .join('')}`;\n    this.routePanel.appendChild(routePanelInstructions);\n  }\n  renderLocationCard(location) {\n    if (!location) return;\n    const locationCardEl = document.getElementsByClassName(\n      'preview__card--location'\n    );\n    if (!locationCardEl.length) {\n      this.locationPreviewCard = document.createElement('div');\n      this.locationPreviewCard.classList.add(\n        'preview__card',\n        'preview__card--location',\n        'preview__card--text'\n      );\n      this.locationPreviewCard.setAttribute('draggable', 'true');\n\n      this.imageList.insertAdjacentElement(\n        'afterbegin',\n        this.locationPreviewCard\n      );\n    }\n    this.locationPreviewCard.innerHTML = `\n      <header><h4>Current Location:${' '}</h4>\n      <span><p>${location[0].toFixed(2)},${location[1].toFixed(2)}</p>\n      </span></header>\n    `;\n    // Create remove button\n    const previewCardRemoveBtn = document.createElement('button');\n    previewCardRemoveBtn.innerText = 'x';\n    previewCardRemoveBtn.setAttribute('title', 'Remove current location');\n    previewCardRemoveBtn.classList.add('location__card--remove-btn');\n    this.locationPreviewCard.appendChild(previewCardRemoveBtn);\n  }\n  // Render all cards from state\n  renderAllImgs(images) {\n    images\n      .sort((a, b) => a.imgOrder - b.imgOrder)\n      .filter((img) => img.file != null)\n      .map((img) => this.renderPreviewCard(img));\n  }\n}\n\nexport default new PanelView();\n","export const DEFAULT_COORDS = [-77.041493, 38.930859];","import { DEFAULT_COORDS } from '../config';\nimport { miliToTime, ROUTE_MODES } from '../helpers';\nconst { MAPBOX_TOKEN } = process.env;\nclass MapView {\n  // Leaflet objects and initialization\n  constructor() {\n    this.map = L.map('map').setView([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 5);\n    this.tiles = L.tileLayer(\n      `https://api.mapbox.com/styles/v1/lanesgood/clhsi5wdt00yk01pffukxf1s4/tiles/{z}/{x}/{y}?access_token=${MAPBOX_TOKEN}`,\n      {\n        minZoom: 0,\n        maxZoom: 22,\n      }\n    );\n    this.routeLine = L.polyline([]); // Set empty routeline to allow later clearing. Will likely later change to array of features to permit multiple lines\n    this.photoMarkers = L.layerGroup();\n    this.currentPositionMarker = L.marker();\n  }\n  render() {\n    this.tiles.addTo(this.map);\n    this.photoMarkers.addTo(this.map);\n  }\n  renderPhotoMarker(latitude, longitude, file, i) {\n    const imageURL = URL.createObjectURL(file);\n    const photoPopup = L.popup({\n      autoClose: false,\n    }).setContent(`<img class='marker-photo' src='${imageURL}' />`);\n    const photoMarker = L.marker([latitude, longitude]);\n    photoMarker.imgId = i;\n    this.photoMarkers.addLayer(photoMarker);\n    photoMarker.bindPopup(photoPopup).openPopup();\n  }\n  flyToDefaultCoords() {\n    this.map.flyTo([DEFAULT_COORDS[1], DEFAULT_COORDS[0]], 10);\n  }\n  flyToImageBounds(images) {\n    this.map.flyToBounds(\n      images.map(({ latitude, longitude }) => [latitude, longitude])\n    );\n  }\n  renderRouteLine(routeData, transportMode) {\n    const routeCoords = routeData.paths[0].points.coordinates.map((coords) => [\n      coords[1],\n      coords[0],\n    ]);\n    const routeTime = miliToTime(routeData.paths[0].time);\n    this.routeLine.setLatLngs(routeCoords).addTo(this.map);\n    this.routeLine.bindPopup(`${ROUTE_MODES[transportMode]}: ${routeTime}`).openPopup();\n  }\n  clearRouteLine() {\n    this.routeLine.remove();\n  }\n}\nexport default new MapView();\n","import * as model from './model.js';\nimport panelView from './views/panelView.js';\nimport mapView from './views/mapView.js';\n\nif (module.hot) {\n  module.hot.accept();\n}\nconst { state } = model;\n\nconst controlAddFiles = async function (fileList) {\n  let nextImgOrder = state.images.length; // Initialize with the current count\n  for (let i = 0; i < fileList.length; i++) {\n    const file = fileList[i];\n\n    if (!state.images.some((img) => img.file?.name === file.name)) {\n      const imgOrder = nextImgOrder++;\n      const imgId = crypto.randomUUID();\n\n      try {\n        const exifData = await model.getExifData(file);\n        const { latitude, longitude } = exifData;\n\n        const newImage = {\n          file,\n          imgId,\n          imgOrder,\n          latitude,\n          longitude,\n        };\n\n        state.images.push(newImage);\n\n        mapView.renderPhotoMarker(latitude, longitude, file, imgId);\n        panelView.renderPreviewCard(newImage);\n        mapView.flyToImageBounds(state.images);\n      } catch (e) {\n        console.error(e);\n        alert('Could not extract location data for this image');\n      }\n    } else {\n      alert(`${file.name} is already in the destination list`);\n    }\n  }\n\n  mapView.clearRouteLine();\n  panelView.input.value = '';\n  panelView.checkSubmitBtn(state.images.length);\n};\n\nconst controlPreviewClick = function (i) {\n  const img = state.images.find((img) => img.imgId === i);\n  mapView.map.flyTo([img.latitude, img.longitude], 15);\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.imgId === i) {\n      layer.openPopup();\n    }\n  });\n};\n\nconst controlRouteCardClick = function () {\n  panelView.renderRoutePanel(state.routeData, state.transportMode);\n};\nconst controlRouteBackClick = function () {\n  panelView.routePanel.remove();\n  panelView.renderAllImgs(state.images);\n};\n// Remove image from state and prevew when close (x) button clicked\nconst controlRemoveImage = function (i) {\n  mapView.photoMarkers.eachLayer((layer) => {\n    if (layer.imgId === i) {\n      mapView.map.removeLayer(layer);\n    }\n  });\n  panelView.imageList.removeChild(\n    panelView.imageList.querySelector(`[data-img-id=\"${i}\"]`)\n  );\n  state.images = state.images.filter((img) => img.imgId !== i);\n  mapView.clearRouteLine();\n  panelView.checkSubmitBtn(state.images.length);\n};\n\nconst controlUserLocation = async function (e) {\n  if (e.target.checked) {\n    try {\n      const {\n        coords: { latitude, longitude },\n      } = await model.getPosition();\n      // Add current location to images array\n      state.images.push({\n        file: null,\n        imgId: 'currentCoords',\n        imgOrder: 1000,\n        latitude,\n        longitude,\n        currentPosition: true,\n      });\n      // Add current location marker\n      mapView.currentPositionMarker.setLatLng([latitude, longitude]);\n      mapView.currentPositionMarker.bindPopup('Current location');\n      mapView.photoMarkers.addLayer(mapView.currentPositionMarker);\n\n      // Add current location preview card\n      panelView.renderLocationCard([latitude, longitude]);\n      mapView.currentPositionMarker.openPopup();\n      mapView.flyToImageBounds(state.images);\n      panelView.checkSubmitBtn(state.images.length);\n    } catch (e) {\n      console.error(e);\n      alert('User location not available'); // Replace with toast\n    }\n  } else if (!e.target.checked) {\n    // Remove current location marker\n    if (mapView.map.hasLayer(mapView.currentPositionMarker)) {\n      mapView.map.removeLayer(mapView.currentPositionMarker);\n    }\n    // Remove current location from coords array\n    state.images = state.images.filter(image => !image.currentPosition);\n\n    // Set map view based on existing images\n    if (state.images.length > 0) {\n      mapView.flyToImageBounds(state.images);\n    } else {\n      mapView.flyToDefaultCoords();\n    }\n    // Remove location preview card\n    panelView.imageList.removeChild(panelView.locationPreviewCard);\n    // Remove current position marker\n    mapView.photoMarkers.removeLayer(mapView.currentPositionMarker);\n    panelView.checkSubmitBtn(state.images.length);\n    return state.images;\n  }\n};\nconst controlLocationPreviewClick = function () {\n  let currentCoords = state.images.find(image => image.currentPosition);\n  mapView.map.flyTo([currentCoords.latitude, currentCoords.longitude], 15);\n};\n\nconst controlRemoveLocationPreview = function () {\n  // Remove current location from coords array\n  state.images = state.images.filter(image => !image.currentPosition);\n  // Remove location preview card\n  panelView.imageList.removeChild(panelView.locationPreviewCard);\n  panelView.checkSubmitBtn(state.images.length);\n  // Remove map marker for current location\n  if (mapView.map.hasLayer(mapView.currentPositionMarker)) {\n    mapView.map.removeLayer(mapView.currentPositionMarker);\n  }\n};\n\n// Update the model based on preview cards sorted via drag\nconst controlImagesOrder = function () {\n  const sortOrder = [\n    ...panelView.imageList.querySelectorAll('.preview__card'),\n  ].map((el) => el.getAttribute('data-img-id'));\n  state.images = state.images\n    .sort((a, b) => sortOrder.indexOf(a.imgId) - sortOrder.indexOf(b.imgId))\n    .map((img, i) => ({ ...img, imgOrder: i }));\n};\n\nconst controlSubmit = async function (transportMode) {\n  state.transportMode = transportMode;\n  const routeData = await model.getRoute(state.transportMode);\n  state.routeData = routeData;\n  mapView.flyToImageBounds(state.images);\n  mapView.renderRouteLine(state.routeData, state.transportMode);\n  panelView.renderRoutePreviewCard(state.routeData, state.transportMode);\n};\n\nconst controlClear = function () {\n  // Remove all images\n  state.images.length = 0;\n  // remove all photo markers\n  mapView.photoMarkers.clearLayers();\n  // remove route from map\n  mapView.clearRouteLine();\n  // Reset map view\n  mapView.flyToDefaultCoords();\n  // Remove all image previews\n  panelView.imageList.replaceChildren();\n  !!panelView.routePreviewCard && panelView.routePreviewCard.remove();\n  !!panelView.routePanel && panelView.routePanel.remove();\n\n  // reset to default coords/world view\n  panelView.form.reset();\n  panelView.checkSubmitBtn(state.images.length);\n};\n\nexport const init = function () {\n  console.log('Snappy trails is up and running. Reticulating splines');\n\n  state.images.length > 0 && panelView.renderAllImgs(state.images);\n  mapView.render();\n  panelView.addHandlerUserLocation(controlUserLocation);\n  panelView.addHandlerFileInput(controlAddFiles);\n  panelView.addHandlerDropInput(controlAddFiles);\n  panelView.addHandlerPreviewClick(controlPreviewClick);\n  panelView.addHandlerDragPreviewCard(controlImagesOrder);\n  panelView.addHandlerLocationPreviewClick(controlLocationPreviewClick);\n  panelView.addHandlerRemoveCurrentLocation(controlRemoveLocationPreview);\n  panelView.addHandlerRemoveImage(controlRemoveImage);\n  panelView.addHandlerSubmit(controlSubmit);\n  panelView.addHandlerRouteCardClick(controlRouteCardClick);\n  panelView.addHandlerRoutePanelBack(controlRouteBackClick);\n  panelView.addHandlerClear(controlClear);\n};\n"],"names":["$bd02c871d9c5ba8e$export$e336666bf7450545","meters","$bd02c871d9c5ba8e$export$fd49f38c4a455c6d","mili","Date","toISOString","slice","$bd02c871d9c5ba8e$export$2077e0241d6afd3c","number","precision","Math","round","$bd02c871d9c5ba8e$export$3715616f3d4d8e41","degrees","minutes","seconds","direction","dd","$bd02c871d9c5ba8e$export$d40b87dcd80796ee","foot","bike","car","$0f1d4402dffacf5b$export$ca000e230c0caa3e","images","currentLatLng","transportMode","routeData","$0f1d4402dffacf5b$export$dd3a48f74d5a1199","file","Promise","resolve","reject","EXIF","getData","DateTime","GPSImgDirection","GPSImgDirectionRef","GPSLatitudeRef","GPSLatitude","GPSLongitudeRef","GPSLongitude","Make","Model","getAllTags","this","latitude","longitude","Error","async","$0f1d4402dffacf5b$export$da6d2f7032b7150b","pointArray","sort","a","b","imgOrder","map","query","URLSearchParams","key","toString","res","fetch","method","headers","body","JSON","stringify","profile","points","points_encoded","data","json","ok","message","error","console","$0f1d4402dffacf5b$export$1690e12b840569b9","navigator","geolocation","getCurrentPosition","$0c5fefc7cefea244$export$2e2bcd8739ae039","_parentElement","document","querySelector","input","_submitBtn","_clearBtn","_userLocationInput","imageList","form","dropZone","routePreviewCard","routePanel","locationPreviewCard","addHandlerFileInput","handler","addEventListener","e","fileList","files","length","addHandlerDropInput","forEach","eventName","preventDefaults","highlight","unhighlight","dataTransfer","helperText","classList","add","innerText","remove","preventDefault","stopPropagation","addHandlerRemoveImage","target","closest","stopImmediatePropagation","imgId","dataset","addHandlerPreviewClick","addHandlerRouteCardClick","addHandlerLocationPreviewClick","addHandlerRemoveCurrentLocation","checked","addHandlerSubmit","FormData","get","addHandlerClear","addHandlerUserLocation","addHandlerRoutePanelBack","addHandlerDragPreviewCard","previewCard","draggingElement","afterElement","container","y","clientY","querySelectorAll","reduce","child","box","getBoundingClientRect","offset","top","height","element","Number","NEGATIVE_INFINITY","appendChild","insertBefore","card","i","setAttribute","renderPreviewCard","exifdata","createElement","previewCardHeader","previewCardText","previewCardRemoveBtn","previewImage","src","URL","createObjectURL","year","month","day","hours","split","dateObject","innerHTML","toLocaleDateString","toLocaleTimeString","hour","minute","toFixed","insertAdjacentElement","renderRoutePreviewCard","routeTime","paths","time","routeDistance","distance","getElementsByClassName","renderRoutePanel","startPoint","coordinates","join","endPoint","pop","routePanelBackBtn","replaceChildren","routePanelInstructions","instructions","step","index","text","renderLocationCard","location","renderAllImgs","filter","img","$ba30e20475feac5a$export$2caadec3201a577","$c73a7764721fa31f$export$2e2bcd8739ae039","constructor","L","setView","tiles","tileLayer","minZoom","maxZoom","routeLine","polyline","photoMarkers","layerGroup","currentPositionMarker","marker","render","addTo","renderPhotoMarker","imageURL","photoPopup","popup","autoClose","setContent","photoMarker","addLayer","bindPopup","openPopup","flyToDefaultCoords","flyTo","flyToImageBounds","flyToBounds","renderRouteLine","routeCoords","coords","setLatLngs","clearRouteLine","state","$f50bd1f2915ed0f2$var$state","$0f1d4402dffacf5b$exports","$f50bd1f2915ed0f2$var$controlAddFiles","nextImgOrder","some","name","alert","crypto","randomUUID","exifData","getExifData","newImage","push","value","checkSubmitBtn","$f50bd1f2915ed0f2$var$controlPreviewClick","find","eachLayer","layer","$f50bd1f2915ed0f2$var$controlRouteCardClick","$f50bd1f2915ed0f2$var$controlRouteBackClick","$f50bd1f2915ed0f2$var$controlRemoveImage","removeLayer","removeChild","$f50bd1f2915ed0f2$var$controlUserLocation","getPosition","currentPosition","setLatLng","hasLayer","image","$f50bd1f2915ed0f2$var$controlLocationPreviewClick","currentCoords","$f50bd1f2915ed0f2$var$controlRemoveLocationPreview","$f50bd1f2915ed0f2$var$controlImagesOrder","sortOrder","el","getAttribute","indexOf","$f50bd1f2915ed0f2$var$controlSubmit","getRoute","$f50bd1f2915ed0f2$var$controlClear","clearLayers","reset","log"],"version":3,"file":"index.da5c299f.js.map"}